class Solution {
public:
    string simplifyPath(string path) {
        string ret;
        int pathLen=path.length();

        deque<string> s;
        char carr[path.length()+1];
        strcpy(carr,path.c_str());
        int i=1;
        while(i<pathLen){
            string str;
            while(i<pathLen&&carr[i++]!='/'){
                str+=carr[i-1];

            }
            // i++;
            while(carr[i]=='/'){
            i++;
            }
                // i++;
            if(str==".."){
                if(!s.empty())
                s.pop_back();
            }
            else if(str==".")
                continue;
            else if(!str.empty())
            s.push_back(str);
        }
        cout<<endl;

        while(!s.empty()){
            ret+='/';            
            ret+=s.front();
            s.pop_front();
        }
        
        if(!ret.empty())
            return ret;
        else
            return "/";
    }
};
