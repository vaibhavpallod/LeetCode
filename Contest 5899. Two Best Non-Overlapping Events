class Solution {
public:
    
    //Input: events = [[1,5,3],[1,5,1],[6,6,5]]

    int maxTwoEvents(vector<vector<int>>& events) {
        
        auto comp = [](vector<int> a, vector<int> b) {
            return a[1] > b[0] || a[2] < b[2];
        };

        
        priority_queue<vector<int>,vector<vector<int>>,decltype(comp)> pq(comp);
        
        
        for(int i=0;i<events.size();i++){
            
            pq.emplace(events[i]);
            
            
        }
        
        int mx=0;
        while(!pq.empty())
        {
            vector<int> ret = pq.top();
            pq.pop();
            int val;
            bool     notem=false;
            vector<int> temp;
            if(!pq.empty()){
                notem=true;
                temp =pq.top();
            }
             
            if(notem && (temp[0])>ret[1]){
                val  = (temp[2])  + ret[2];
                
            }
            else{
                val = ret[2];
            }
            
            mx =max(mx,val);
            
            cout<<ret[0]<<" "<<ret[1]<<" "<<ret[2]<<endl;
        }
        
        
        
        
        
        return mx;
    }
};
