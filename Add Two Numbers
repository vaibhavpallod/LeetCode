/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode    *ret=NULL,*head ; 
        int carry=0;
        while(l1 && l2){
            
            int sum = l1->val + l2->val +carry;
            carry=0;
            if(ret == NULL){
                string s=to_string(sum); 
                if(s.length() == 1){
                ret = new ListNode(sum);
                carry=0;
                }
                else{
                ret = new ListNode((int)((s[1]-48)));
                carry = ((int)(s[0]-48));                    
                    
                }                
                head=ret;
            } 
            else{
                
                string s=to_string(sum); 
                if(s.length() == 1)
                {
                 
                ret->next = new ListNode(sum);
                ret=ret->next;
                carry=0;

                }
                else{
                ret->next = new ListNode((int)(s[1]-48));
                ret=ret->next;
                
                carry = ((int)(s[0]-48));
                    
                }
            
            }
                
            l1=l1->next;
            l2=l2->next;
        }
        
        while(l1){
            int sum = l1->val +carry;
            carry=0;
            if(ret == NULL){
                string s=to_string(sum); 
                if(s.length() == 1){
                ret = new ListNode(sum);
                carry=0;
                }
                else{
                ret = new ListNode((int)((s[1]-48)));
                carry = ((int)(s[0]-48));                    
                    
                }                
                head=ret;
                
            } 
            else{
                
                string s=to_string(sum); 
                if(s.length() == 1)
                {
                 
                ret->next = new ListNode(sum);
                ret=ret->next;
                carry=0;

                }
                else{
                ret->next = new ListNode((int)(s[1]-48));
                ret=ret->next;
                
                carry = ((int)(s[0]-48));
                    
                }
            
            }
            
            
            
            l1=l1->next;
            
        }
        
        while(l2){
            int sum = l2->val +carry;
            carry=0;
            if(ret == NULL){
                string s=to_string(sum); 
                if(s.length() == 1){
                ret = new ListNode(sum);
                carry=0;
                }
                else{
                ret = new ListNode((int)((s[1]-48)));
                carry = ((int)(s[0]-48));                    
                    
                }                
                head=ret;
                
            } 
            else{
                
                string s=to_string(sum); 
                if(s.length() == 1)
                {
                 
                ret->next = new ListNode(sum);
                ret=ret->next;
                carry=0;

                }
                else{
                ret->next = new ListNode((int)(s[1]-48));
                ret=ret->next;
                
                carry = ((int)(s[0]-48));
                    
                }
            
            }
          l2=l2->next;

        }
        if(carry==0)
        return head;
        else{
            ret->next = new ListNode(carry);
            return head;

        }
        
    }
};
