class Solution {
public:
    string multiply(string num1, string num2) {
      
        if(num1=="0" || num2=="0"){
            return "0";
        }
        
        vector<string> vec;
        int len1=num1.size();
        int len2=num2.size();
         int i=0;   
            
        for(int j=len2-1 ; j>=0;j--){
            string mul="";
            int car=0;
            int f=num2[j]-'0';

            for(int z=0;z<i;z++)mul+='0';
            i++;
            
            
            for(int k=len1-1;k>=0;k--){
                int s=num1[k]-'0';

                string m=to_string((f*s)+car);
                car=0;
                if(m.length()>1){
                    car+=m[0]-'0';
                    mul+=m[1];

                }else{
                    mul+=m[0];
                }


            }
            
            if(car>0){
                mul+=((char)car)+'0';
            }
            
                
            // reverse(mul.begin(), mul.end()); 
            // cout<<mul<<endl;
            vec.push_back(mul);
        }
        string fs="";
        int maxx=vec.back().size(),carry=0;
        for(int i=0;i<maxx;i++){
            int sum=0;
            
            for(int j=0;j<vec.size();j++){
                if(vec[j].size() >i ){
                    
                    string x=vec[j];
                    int a=x[i]-'0';
                    sum+=a;
                }
                
                
            }
            
            string m=to_string(sum+carry);
            // cout<<m<<endl;
            reverse(m.begin(),m.end());
            if(m.size()>1){
                int tot=(m[0]-'0') ;
                fs+=tot+'0';
                string c= m.substr(1);
                reverse(c.begin(),c.end());
                carry=stoi(c);
            }else{
                int tot=(m[0]-'0') ;

                fs+=tot+'0';
                carry=0;
            }
            
        }
        if(carry>0)
            fs+=carry+'0';
        
        reverse(fs.begin(),fs.end());
            
            
        
        
        
        
        return fs;
    }
};
