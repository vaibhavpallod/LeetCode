class Solution {
public:
    int threeSumClosest(vector<int>& nums, int target) {
        set<int,greater<int>> s,les,gre;
        sort(nums.begin(),nums.end());
        
        int n = nums.size();
        
        for(int i=0;i<n-2;i++){
            int l=i+1,r=n-1;
            int sum;
            while(l<r){
                
                sum=nums[i]+nums[l]+nums[r];
                if(sum<target)
                    l++;
                else if(sum>target)
                    r--;
                
                if(sum==target){
                    cout<<target<<endl;
                    s.insert(target);                
                    l++;r--;
                }else if(sum<target)
                    les.insert(sum);
                else if(sum>target)
                    gre.insert(sum);
                
            }
        }
        
        if(s.size()>0)
            return target;
        else if(les.size()==0)
            return *gre.rbegin();
        else if(gre.size()==0)
            return *les.begin();
        else if((target - *les.begin())<(*gre.rbegin()-target))
            return *les.begin();
        else 
            return *gre.rbegin();
        
        
    }
};
