class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        vector<int> vec;
        map<int,int> mn;
        for(auto x:nums){
            mn[x]++;
        }
        
        auto comp = [&](const pair<int,int> &a,const pair<int,int> &b){
            return a.first<b.first || (a.first==b.first && a.second > b.second);
        };
        
        priority_queue<pair<int,int>,vector<pair<int,int>>,decltype (comp)> pq(comp);
        
        
        for(auto x:mn){
            pq.emplace(x.second,x.first);
        }
        
        for(int i=0;i<k;i++){
            
            vec.push_back(pq.top().second);
            pq.pop();
            
        }
        
        return vec;
    }
};
