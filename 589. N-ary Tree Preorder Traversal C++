/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    
    vector<int> pre(Node* root,vector<int> &vec){
        
        if(!root)
            return vec;
        
        
        vec.push_back(root->val);
        cout<<root->val<<" ";
        
        for(auto x:root->children){
            
            pre(x,vec);
            
            
        }
      
        return vec;
    }
    
    vector<int> preorder(Node* root) {
          
        
        vector<int> ret;
        if(!root)
            return ret;
        
        pre(root,ret);
        
        return ret;
    }
};
