class Solution {
public:
    
    bool ispalindrome(string &s,int l,int r){
        
        while(l<r){
            if(s[l++]!=s[r--])
                return false;
        }
        return true;
    }
    
    void track(vector<vector<string>> &vec,vector<string> &vs,string &s,int l){
        
        if(l == s.length()){
            vec.push_back(vs);
            return;
        }
        
        for(int i=l;i<s.length();i++){
            
            if(ispalindrome(s,l,i))    {
                
                vs.push_back(s.substr(l,i-l+1));
                track(vec,vs,s,i+1);
                if(!vs.empty())
                vs.pop_back();
            
            }
        }
        
    }
    
    
    
    vector<vector<string>> partition(string s) {
        vector<vector<string>> vec;
        vector<string> vs;
        track(vec,vs,s,0);
        return vec;
    }
};
