/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    bool isBST=true;
    vector<int> vec;
    void check(TreeNode* root){
        
        if(root == NULL)
            return;
        
        TreeNode* prev = root;
        
        if(root->left)
            check(root->left);
        cout<<root->val<<" ";
        vec.push_back(root->val);
        if(root->right)
            check(root->right);
        
    }
    
    bool isValidBST(TreeNode* root) {
        check(root);
        
        for(int i=0;i<vec.size()-1;i++){
            if(vec[i]>=vec[i+1])
                return false;
        }
        
    return true;
    }
};
